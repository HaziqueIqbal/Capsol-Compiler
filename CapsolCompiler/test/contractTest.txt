capsol version 0.1;
contract conc{
    string public abc = "d";
    uint public  x = 5;
    uint public b = x * 3;
    int public c;
    point public point2 = 83.4;
    point public point1 = point2;
    alpha public alp = '4';
    int public a = +64;    
    function ssbb(uint storage a,uint[] b) public returns (uint){
        a = this.b;
        string bc = this.abc;        
        while(x<b){}
    }
    function ssbb(uint storage a,uint[] b) public returns (int){
        a = this.b;
        string bc = this.abc;
        while(x<b){}
    }
}
contract conc1 {}
abstract contract conc2 is conc, conc1{
    function ssbb(conc storage a,uint[] b) public returns (uint){
        uint bd = super.x;
        string x = super.abc;
    }
}

interface u1 {
    function ssbb(int storage a,uint[] b) public returns (uint) $$not contain body
}

interface u2 {}
interface conc3 is u1, u2{}